<?php
/**
 * Created by PhpStorm.
 * User: ExploitKn
 * Date: 11.11.2017
 * Time: 23:53
 */

namespace App\Repositories;

use App\Skills;
use Image;

class SkillsRepository extends Repository {

    public function __construct(Skills $skill){
        $this->model = $skill;
    }

    public function addSkill($request) {

        $data = $request->except('_token','image');
        if(empty($data)) {
            return array('error' => 'Нет данных');
        }

        //Псевдонимы
        if(empty($data['alias'])) {
            $data['alias'] = $this->transliterate($data['title']);
        }
        if($this->one($data['alias'], FALSE)) {
            $request->merge(array('alias' => $data['alias']));
            //Сохранним в сессию
            $request->flash();
            return ['error' => 'Данный псевдоним уже используется'];
        }
        // Изображение
        if($request->hasFile('image')) {
            $image = $request->file('image');
            if($image->isValid()) {
                $str = str_random(8);
                $obj = new \stdClass;
                $obj->path = $str.'.png';
                $img = Image::make($image);
                $img->save(public_path().'/'.env('THEME').'/images/skills/'.$obj->path);
                $data['img'] = json_encode($obj);
            }
        }
        if($this->model->fill($data)->save()) {
            return ['status' => 'Навык добавлен'];
        }
    }


    public function updateSkill($request, $skill) {

        $data = $request->except('_token','image','_method');
        if(empty($data)) {
            return array('error' => 'Нет данных');
        }
        //Псевдонимы
        if(empty($data['alias'])) {
            $data['alias'] = $this->transliterate($data['title']);
        }
        $result = $this->one($data['alias'], FALSE);
        if(isset($result->id) && ($result->id != $skill->id)) {
            $request->merge(array('alias' => $data['alias']));
            //Сохранним в сессию
            $request->flash();
            return ['error' => 'Данный псевдоним уже используется'];
        }
        // Изображение
        if($request->hasFile('image')) {
            $image = $request->file('image');
            if($image->isValid()) {
                $str = str_random(8);
                $obj = new \stdClass;
                $obj->path = $str.'.jpg';

                $img = Image::make($image);
                $img->save(public_path().'/'.env('THEME').'/images/skills/'.$obj->path);

                $data['img'] = json_encode($obj);
            }
        }

        //ЗАПОЛНЯЕМ МОДЕЛЬ
        $skill->fill($data);
        //СОХРАНЯЕМ МОДЕЛЬ
        if($skill->update()) {
            return ['status'=> 'Навык обновлен'];
        }
    }

    public function deleteSkill($skill) {

        $skill->delete();
        if($skill->delete()) {
            return ['status' => 'Навык удален'];
        }
    }
}