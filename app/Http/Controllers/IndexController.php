<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use App\Repositories\PremsRepository;
use App\Repositories\PortfolioRepository;
use App\Repositories\BlogsRepository;
use App\Repositories\SlidersRepository;
use App\Repositories\UslugyRepository;
use App\Uslugy;

use Config;
use App\Http\Requests;

class IndexController extends SiteController
{
    public function __construct(PremsRepository $pr_rep,
                                PortfolioRepository $port_rep ,
                                BlogsRepository $b_rep,
                                SlidersRepository $s_rep,
                                UslugyRepository $usl_rep){

        parent::__construct(new \App\Repositories\MenusRepository(new \App\Menu),
            new \App\Repositories\FooterRepository(new \App\Footer),
            new \App\Repositories\LogoRepository(new \App\Logo),
            new \App\Repositories\PortfolioRepository(new \App\Portfolio));

        $this->pr_rep = $pr_rep;
        $this->port_rep = $port_rep;
        $this->b_rep = $b_rep;
        $this->s_rep = $s_rep;
        $this->usl_rep = $usl_rep;

        $this->template = env('THEME').'.index';//Имя шаблона
    }

    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index()
    {
        $this->keywords = 'Создание сайтов под заказ, Портфолио web разработчика, недорого, создание сайтов недорого, разработка web приложений, в Перми, заказать сайт, разработка плагинов, Сайт на Laravel';
        $this->meta_desc = 'Портфолио web разработчика. Качественная разработка сайтов с адаптивным дизайном. Разработка сайтов на Laravel, Yii2, Wordpress';
        $this->title = 'Dexploitdm';


        $prems = $this->getPrems();
        $content = view(env('THEME').'.content')->with('prem',$prems)->render();
        $this->vars = array_add($this->vars,'content', $content);

        $sliders = $this->getSliders();
        $slider = view(env('THEME').'.slider')->with('slider',$sliders)->render();
        $this->vars = array_add($this->vars,'slider', $slider);

        $portfolios = $this->getPortfolios();
        $portfolio = view(env('THEME').'.portfolio')->with('portfolio',$portfolios)->render();
        $this->vars = array_add($this->vars,'portfolio', $portfolio);

        $blogs = $this->getBlogs();
        $blog = view(env('THEME').'.blog')->with('blog',$blogs)->render();
        $this->vars = array_add($this->vars,'blog', $blog);

        $uslugs = $this->getUslRaz();
        $diz = $this->getUslDiz();

        $uslug = view(env('THEME').'.uslug')->with([
            'uslug' => $uslugs,
            'diz' => $diz
        ])->render();
        $this->vars = array_add($this->vars,'uslug', $uslug);


        return $this->renderOutput();

    }

    public function getUslRaz() {

        $uslugs = $this->usl_rep->filterGet('*','TRUE', 'Разработка');
        return $uslugs;
    }

    public function getUslDiz() {
        $diz = $this->usl_rep->filterGet('*','TRUE', 'Дизайн');
        return $diz;
    }

    public function getPrems(){
        $prem = $this->pr_rep->get(['id','title','desc','img']);

        return $prem;
    }

    public function getPortfolios() {
        $portfolio = $this->port_rep->get('*', Config::get('settings.home_port_count'));
        return $portfolio;
    }

    public function getBlogs() {
        $portfolio = $this->b_rep->get('*', Config::get('settings.home_blog_count'));
        return $portfolio;
    }

    public function getSliders() {
        $slider = $this->s_rep->get('*');
        return $slider;
    }


    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function create()
    {
        //
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function store(Request $request)
    {
        //
    }

    /**
     * Display the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function show($id)
    {
        //
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function edit($id)
    {
        //
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function update(Request $request, $id)
    {
        //
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function destroy($id)
    {
        //
    }
}
