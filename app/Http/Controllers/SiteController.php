<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use App\Repositories\MenusRepository;
use App\Repositories\FooterRepository;
use App\Repositories\LogoRepository;
use App\Repositories\PortfolioRepository;

use App\Http\Requests;
use Menu;

class SiteController extends Controller
{
    //
    protected $log_rep; // Логотип
    protected $m_rep; // Меню
    protected $s_rep; // Слайдер
    protected $pr_rep; // Преимущества
    protected $port_rep; // Портфолио
    protected $filter_rep; // Фильтер
    protected $tech_rep; // Технологии
    protected $foo_rep; // Футер
    protected $rez_rep; // Резюме
    protected $usl_rep; // Услуги
    protected $b_rep; // Статьи
    protected $con_rep; // Контакты
    protected $skills_rep; // Знания
    protected $template;//Основная логика Вида
    protected $vars = array();
    protected $keywords;
    protected $meta_desc;
    protected $title;



    public function __construct(MenusRepository $m_rep, FooterRepository $foo_rep, LogoRepository $log_rep, PortfolioRepository $port_rep){
        $this->m_rep = $m_rep;
        $this->foo_rep = $foo_rep;
        $this->log_rep = $log_rep;
        $this->port_rep = $port_rep;
    }
    protected function renderOutput(){
        $this->vars = array_add($this->vars,'keywords', $this->keywords);
        $this->vars = array_add($this->vars,'meta_desc', $this->meta_desc);
        $this->vars = array_add($this->vars,'title', $this->title);

        $menu = $this->getMenu();
        $navigation = view(env('THEME').'.navigation')->with('menu',$menu)->render();
        $this->vars = array_add($this->vars,'navigation', $navigation);

        $logo = $this->getLogo();
        $logoH = $this->getLogoH();
        $proj = $this->getProj();
        $foot = $this->getFoot();
        $footer = view(env('THEME').'.footer')->with([
            'foot' => $foot,
            'logo' => $logo,
            'proj' => $proj
        ])->render();
        $this->vars = array_add($this->vars,'footer', $footer);

        return view($this->template)->with($this->vars);
    }

    public function getFoot(){
        $foot = $this->foo_rep->get();
        return $foot;
    }

    public function getLogo(){
        $foot = $this->log_rep->LogoGet('*','TRUE','Подвал');
        return $foot;
    }

    public function getLogoH(){
        $logoH = $this->log_rep->LogoGet('*','TRUE','Шапка');
        return $logoH;
    }

    public function getProj(){
        $proj = $this->port_rep->get('*','9');
        return $proj;
    }

    public function getMenu(){
        $menu = $this->m_rep->get();
        $mBuilder = Menu::make('MyNav', function ($m) use ($menu){
            foreach($menu as $item){
                if($item->parent == 0) {//Является  ли родительским
                    $m->add($item->title, $item->path)->id($item->id);
                }  else {
                    if($m->find($item->parent)) {
                        $m->find($item->parent)->add($item->title, $item->path)->id($item->id);
                    }
                }
            }
        });
        //dd($mBuilder);
        return $mBuilder;
    }



}
