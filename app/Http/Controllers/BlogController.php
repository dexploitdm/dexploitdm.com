<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use App\Repositories\BlogsRepository;
use App\Blog;
use App\Category;

use App\Http\Requests;

class BlogController extends SiteController
{
    public function __construct(BlogsRepository $b_rep)
    {

        parent::__construct(new \App\Repositories\MenusRepository(new \App\Menu),
            new \App\Repositories\FooterRepository(new \App\Footer),
            new \App\Repositories\LogoRepository(new \App\Logo),
            new \App\Repositories\PortfolioRepository(new \App\Portfolio));

        $this->b_rep = $b_rep;
        $this->template = env('THEME') . '.blogs';
    }

    public function index($cat_alias = FALSE)
    {
        $this->title = 'Статьи';
        $this->keywords = 'Статьи про web разработку, сайт, портфолио, уроки, инструкции, web дизайн, frontend, backend';
        $this->meta_desc = 'Статьи web разработчика';
        
        $blogs = $this->getBlogs($cat_alias);
        //dd($blogs);
        $content = view(env('THEME') . '.blogs_content')->with('blogs', $blogs)->render();
        $this->vars = array_add($this->vars, 'content', $content);

    return $this->renderOutput();
    }


    public function getBlogs($alias = FALSE) {

        $where = FALSE;

        if($alias) {
            $id = Category::select('id')->where('alias', $alias)->first()->id;
            $where = ['category_id', $id];
        }
        $blogs = $this->b_rep->get_blogs(['id','title','alias','created_at','img','desc', 'category_id'], FALSE, TRUE, $where);

        if($blogs) {
            $blogs->load('category');
        }
        return $blogs;
    }

    public function show($alias = FALSE) {

        $blog = $this->b_rep->one($alias);
        
        $this->title = $blog->title;
        $this->keywords = $blog->keywords;
        $this->meta_desc = $blog->desc;
        
        if($blog) {
            $blog->img = json_decode($blog->img);
        }
        $this->title = 'Dexploit | '.$blog->title;
        $content = view(env('THEME').'.blog_content')->with('blog', $blog)->render();
        $this->vars = array_add($this->vars, 'content', $content);

        return $this->renderOutput();
    }


}
