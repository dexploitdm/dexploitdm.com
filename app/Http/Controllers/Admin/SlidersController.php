<?php

namespace App\Http\Controllers\Admin;

use Illuminate\Http\Request;
use App\Repositories\SlidersRepository;
use App\Slider;
use App\Http\Requests;
use App\Http\Requests\SlidersRequest;

use App\Http\Controllers\Controller;

class SlidersController extends AdminController
{
    public function __construct(SlidersRepository $s_rep) {
        parent::__construct();
        $this->s_rep = $s_rep;
        $this->template = env('THEME').'.admin.slider';
    }

    public function index() {
        $this->title = 'Слайдер';
        $slider = $this->getSlider();
        $this->content =view(env('THEME').'.admin.slider_content')
            ->with('slider', $slider)->render();

        return $this->renderOutput();
    }

    public function getSlider() {
        $slider = $this->s_rep->get('*');
        return $slider;
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return SkillsController
     */
    public function create()
    {
        $this->title = "Добавить слайдер";

        $items = Slider::select('*');

        $this->content = view(env('THEME').'.admin.slider_create_content')->with('items', $items)->render();

        return $this->renderOutput();

    }

    public function edit(Slider $slider)
    {
        $slider->img =json_decode($slider->img);
        $slider->img2 =json_decode($slider->img2);
        $slider->img3 =json_decode($slider->img3);
        $slider->img4 =json_decode($slider->img4);

        $items = Slider::pluck('*');

        $this->title = 'Редактирование Слайда';
        $this->content = view(env('THEME').'.admin.slider_create_content')
            ->with(['items' => $items,'slider'=>$slider])->render();
        return $this->renderOutput();
    }

    public function store(SlidersRequest $request)
    {
        $result = $this->s_rep->addSlider($request);
        if(is_array($result) && !empty(['error'])) {
            return  back()->with($result);
        }
        return redirect('/admin')->with($result);
    }

    public function update(SlidersRequest $request, Slider $slider)
    {
        $result = $this->s_rep->updateSlider($request, $slider);
        if(is_array($result) && !empty($result['error'])) {
            return back()->with($result);
        }
        return redirect('/admin/slider')->with($result);
    }

    public function destroy(Slider $slider)
    {
        $result = $this->s_rep->deleteSlider($slider);
        if(is_array($result) && !empty($result['error'])) {
            return back()->with($result);
        }
        return redirect('/admin/slider')->with($result);
    }
}
