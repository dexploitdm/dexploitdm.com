<?php

namespace App\Http\Controllers\Admin;

use App\Repositories\ContactsRepository;
use App\Contact;
use Illuminate\Http\Request;
use App\Http\Requests\ContactsRequest;

use App\Http\Requests;
use App\Http\Controllers\Controller;

class ContactsController extends AdminController
{
    public function __construct(ContactsRepository $con_rep) {
        parent::__construct();
        $this->con_rep = $con_rep;
        $this->template = env('THEME').'.admin.contacts';
    }

    public function index() {
        $this->title = 'Dexploitdm | Контакты';
        $contact = $this->getCont();
        $this->content =view(env('THEME').'.admin.contacts_content')
            ->with('contact', $contact)->render();
        return $this->renderOutput();
    }

    public function getCont() {
        $contact = $this->con_rep->get('*');
        return $contact;
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return SkillsController
     */
    public function create()
    {
        $this->title = "Добавить навык";
        $items = Contact::select('*');
        $this->content = view(env('THEME').'.admin.contacts_create_content')->with('items', $items)->render();

        return $this->renderOutput();

    }

    public function edit(Contact $contact)
    {
        $contact->img =json_decode($contact->img);

        $items = Contact::pluck('*');
        $this->title = 'Редактирование раздела контакты - '. $contact->title;
        $this->content = view(env('THEME').'.admin.contacts_create_content')
            ->with(['items' => $items,'contact'=>$contact])->render();
        return $this->renderOutput();
    }

    public function store(ContactsRequest $request)
    {
        $result = $this->con_rep->addCont($request);
        if(is_array($result) && !empty(['error'])) {
            return  back()->with($result);
        }
        return redirect('/admin')->with($result);
    }

    public function update(ContactsRequest $request, Contact $contact)
    {
        $result = $this->con_rep->updateCont($request, $contact);
        if(is_array($result) && !empty($result['error'])) {
            return back()->with($result);
        }
        return redirect('/admin/contacts')->with($result);
    }

    public function destroy(Contact $contact)
    {
        $result = $this->con_rep ->deleteCont($contact);
        if(is_array($result) && !empty($result['error'])) {
            return back()->with($result);
        }
        return redirect('/admin/contacts')->with($result);
    }
}
