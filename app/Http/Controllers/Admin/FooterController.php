<?php

namespace App\Http\Controllers\Admin;

use App\Repositories\FooterRepository;
use App\Footer;
use Illuminate\Http\Request;
use App\Http\Requests\FootersRequest;

use App\Http\Requests;
use App\Http\Controllers\Controller;

class FooterController extends AdminController
{
    public function __construct(FooterRepository $foo_rep) {

        parent::__construct();
        $this->foo_rep = $foo_rep;
        $this->template = env('THEME').'.admin.footers';
    }

    public function index() {
        $this->title = 'Подвал сайта';
        $footer = $this->getSlider();
        $this->content =view(env('THEME').'.admin.footers_content')
            ->with('footer', $footer)->render();

        return $this->renderOutput();
    }

    public function getSlider() {
        $footer = $this->foo_rep->get('*');
        return $footer;
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return SkillsController
     */
    public function create()
    {
        $this->title = "Добавить подвал сайта";

        $items = Footer::select('*');

        $this->content = view(env('THEME').'.admin.footers_create_content')->with('items', $items)->render();

        return $this->renderOutput();

    }

    public function edit(Footer $footer)
    {
        $footer->img =json_decode($footer->img);

        $items = Footer::pluck('*');

        $this->title = 'Редактирование подвала сайта';
        $this->content = view(env('THEME').'.admin.footers_create_content')
            ->with(['items' => $items,'footer'=>$footer])->render();
        return $this->renderOutput();
    }

    public function store(FootersRequest $request)
    {
        $result = $this->foo_rep->addFooter($request);
        if(is_array($result) && !empty(['error'])) {
            return  back()->with($result);
        }
        return redirect('/admin')->with($result);
    }

    public function update(FootersRequest $request, Footer $footer)
    {
        $result = $this->foo_rep->updateFooter($request, $footer);
        if(is_array($result) && !empty($result['error'])) {
            return back()->with($result);
        }
        return redirect('/admin/footers')->with($result);
    }

    public function destroy(Footer $footer)
    {
        $result = $this->foo_rep->deleteFooter($footer);
        if(is_array($result) && !empty($result['error'])) {
            return back()->with($result);
        }
        return redirect('/admin/footers')->with($result);
    }
}
