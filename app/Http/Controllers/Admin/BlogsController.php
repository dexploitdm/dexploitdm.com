<?php

namespace App\Http\Controllers\Admin;


use App\Category;
use App\Repositories\BlogsRepository;
use App\Blog;
use Illuminate\Http\Request;
use App\Http\Requests\BlogsRequest;

use App\Http\Requests;
use App\Http\Controllers\Controller;

class BlogsController extends AdminController
{
    public function __construct(BlogsRepository $b_rep) {
        parent::__construct();

        $this->b_rep = $b_rep;

        $this->template = env('THEME').'.admin.blogs';
    }

    public function index() {
        $this->title = 'Мои записи';
        $blog = $this->getBlogs();
        $this->content =view(env('THEME').'.admin.blogs_content')
            ->with('blog', $blog)->render();

        return $this->renderOutput();
    }

    public function getBlogs() {
        $blog =$this->b_rep->get('*',FALSE,TRUE,FALSE);
        return $blog;
    }

    public function create()
    {

        $this->title = 'Добавить новый материал';
        $categories = Category::select(['title','alias','parent_id','id'])->get();

        $lists =array();
        foreach($categories as $category) {
            if($category->parent_id == 0) {
                $lists[$category->title] = array();
            }
            else {
                $lists[$categories->where('id',$category->parent_id)->first()->title]
                [$category->id] = $category->title;
            }
        }
        $this->content = view(env('THEME').'.admin.blogs_create_content')->with('categories', $lists)->render();

        return $this->renderOutput();
    }

    public function edit(Blog $blog)
    {
        $blog->img =json_decode($blog->img);
        $categories = Category::select(['title','alias','parent_id','id'])->get();
        $lists = array();
        foreach($categories as $category) {
            if($category->parent_id == 0) {
                $lists[$category->title] = array();
            }
            else {
                $lists[$categories->where('id',$category->parent_id)->first()->title][$category->id] = $category->title;
            }
        }
        $this->title = 'Редактирование материала - '. $blog->title;
        $this->content = view(env('THEME').'.admin.blogs_create_content')
            ->with(['categories' => $lists,'blog'=>$blog])->render();


        return $this->renderOutput();
    }

    public function store(BlogsRequest $request)
    {
        $result = $this->b_rep->addBlog($request);
        if(is_array($result) && !empty(['error'])) {
            return  back()->with($result);
        }
        return redirect('/admin')->with($result);
    }

    public function update(BlogsRequest $request, Blog $blog)
    {
        $result = $this->b_rep->updateBlog($request, $blog);
        if(is_array($result) && !empty($result['error'])) {
            return back()->with($result);
        }
        return redirect('/admin/blog')->with($result);
    }

    public function destroy(Blog $blog)
    {
        $result = $this->b_rep->deleteBlog($blog);
        if(is_array($result) && !empty($result['error'])) {
            return back()->with($result);
        }
        return redirect('/admin/blog')->with($result);
    }
}
