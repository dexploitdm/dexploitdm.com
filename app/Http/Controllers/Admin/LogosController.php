<?php

namespace App\Http\Controllers\Admin;

use App\Repositories\LogoRepository;
use App\Logo;
use Illuminate\Http\Request;
use App\Http\Requests\LogosRequest;

use App\Http\Requests;
use App\Http\Controllers\Controller;

class LogosController extends AdminController
{
    public function __construct(LogoRepository $log_rep) {
        parent::__construct();
        $this->log_rep = $log_rep;
        $this->template = env('THEME').'.admin.logos';
    }

    public function index() {
        $this->title = 'Слайдер';
        $logo = $this->getSlider();
        $this->content =view(env('THEME').'.admin.logos_content')
            ->with('logo', $logo)->render();

        return $this->renderOutput();
    }

    public function getSlider() {
        $logo = $this->log_rep->get('*');
        return $logo;
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return SkillsController
     */
    public function create()
    {
        $this->title = "Добавить слайдер";

        $items = Logo::select('*');

        $this->content = view(env('THEME').'.admin.logos_create_content')->with('items', $items)->render();

        return $this->renderOutput();

    }

    public function edit(Logo $logo)
    {
        $logo->img =json_decode($logo->img);

        $items = Logo::pluck('*');

        $this->title = 'Редактирование Логотипа';
        $this->content = view(env('THEME').'.admin.logos_create_content')
            ->with(['items' => $items,'logo'=>$logo])->render();
        return $this->renderOutput();
    }

    public function store(LogosRequest $request)
    {
        $result = $this->log_rep->addSlider($request);
        if(is_array($result) && !empty(['error'])) {
            return  back()->with($result);
        }
        return redirect('/admin')->with($result);
    }

    public function update(LogosRequest $request, Logo $logo)
    {
        $result = $this->log_rep->updateSlider($request, $logo);
        if(is_array($result) && !empty($result['error'])) {
            return back()->with($result);
        }
        return redirect('/admin/logos')->with($result);
    }

    public function destroy(Logo $logo)
    {
        $result = $this->log_rep->deleteSlider($logo);
        if(is_array($result) && !empty($result['error'])) {
            return back()->with($result);
        }
        return redirect('/admin/logos')->with($result);
    }
}
