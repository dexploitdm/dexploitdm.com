<?php

namespace App\Http\Controllers\Admin;

use App\Repositories\PremsRepository;
use App\Prem;
use Illuminate\Http\Request;
use App\Http\Requests\PremsRequest;

use App\Http\Requests;
use App\Http\Controllers\Controller;

class PremsController extends AdminController
{
    public function __construct(PremsRepository $pr_rep) {
        parent::__construct();
        $this->pr_rep = $pr_rep;
        $this->template = env('THEME').'.admin.prems';
    }

    public function index() {
        $this->title = 'Преимущества';
        $prem = $this->getPrem();
        $this->content =view(env('THEME').'.admin.prems_content')
            ->with('prem', $prem)->render();

        return $this->renderOutput();
    }

    public function getPrem() {
        $prem = $this->pr_rep->get('*');
        return $prem;
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return SkillsController
     */
    public function create()
    {
        $this->title = "Добавить навык";

        $items = Prem::select('*');

        $this->content = view(env('THEME').'.admin.prems_create_content')->with('items', $items)->render();

        return $this->renderOutput();

    }

    public function edit(Prem $prem)
    {
        $prem->img =json_decode($prem->img);
        $items = Prem::pluck('*');

        $this->title = 'Редактирование материала - '. $prem->title;
        $this->content = view(env('THEME').'.admin.prems_create_content')
            ->with(['items' => $items,'prem'=>$prem])->render();
        return $this->renderOutput();
    }

    public function store(PremsRequest $request)
    {
        $result = $this->pr_rep->addPrems($request);
        if(is_array($result) && !empty(['error'])) {
            return  back()->with($result);
        }
        return redirect('/admin')->with($result);
    }

    public function update(PremsRequest $request, Prem $prem)
    {
        $result = $this->pr_rep->updatePrems($request, $prem);
        if(is_array($result) && !empty($result['error'])) {
            return back()->with($result);
        }
        return redirect('/admin/prems')->with($result);
    }

    public function destroy(Prem $prem)
    {
        $result = $this->pr_rep ->deletePrems($prem);
        if(is_array($result) && !empty($result['error'])) {
            return back()->with($result);
        }
        return redirect('/admin/prems')->with($result);
    }
}
