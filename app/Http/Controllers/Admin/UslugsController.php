<?php

namespace App\Http\Controllers\Admin;

use App\Repositories\UslugyRepository;
use App\Uslugy;
use Illuminate\Http\Request;
use App\Http\Requests\UslugsRequest;
use App\Http\Requests;
use App\Http\Controllers\Controller;

class UslugsController extends AdminController
{
    public function __construct(UslugyRepository $usl_rep) {
        parent::__construct();
        $this->usl_rep = $usl_rep;
        $this->template = env('THEME').'.admin.uslugs';
    }

    public function index() {
        $this->title = 'Раздел услуги';
        $uslug = $this->getUslugs();
        $this->content =view(env('THEME').'.admin.uslugs_content')
            ->with('uslug', $uslug)->render();

        return $this->renderOutput();
    }

    public function getUslugs() {
        $uslug = $this->usl_rep->get('*');
        return $uslug;
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return SkillsController
     */
    public function create()
    {
        $this->title = "Добавить услугу";

        $items = Uslugy::select('*');

        $this->content = view(env('THEME').'.admin.uslugs_create_content')->with('items', $items)->render();

        return $this->renderOutput();

    }

    public function edit(Uslugy $uslug)
    {
        $uslug->img =json_decode($uslug->img);

        $items = Uslugy::pluck('*');

        $this->title = 'Редактирование услуги';
        $this->content = view(env('THEME').'.admin.uslugs_create_content')
            ->with(['items' => $items,'uslug'=>$uslug])->render();
        return $this->renderOutput();
    }

    public function store(UslugsRequest $request)
    {
        $result = $this->usl_rep->addUsl($request);
        if(is_array($result) && !empty(['error'])) {
            return  back()->with($result);
        }
        return redirect('/admin')->with($result);
    }

    public function update(UslugsRequest $request, Uslugy $uslug)
    {
        $result = $this->usl_rep->updateUsl($request, $uslug);
        if(is_array($result) && !empty($result['error'])) {
            return back()->with($result);
        }
        return redirect('/admin/uslugs')->with($result);
    }

    public function destroy(Uslugy $uslug)
    {
        $result = $this->usl_rep->deleteUsl($uslug);
        if(is_array($result) && !empty($result['error'])) {
            return back()->with($result);
        }
        return redirect('/admin/uslugs')->with($result);
    }
}
