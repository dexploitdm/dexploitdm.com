<?php

namespace App\Http\Controllers\Admin;

use App\Repositories\PortfolioRepository;
use App\Repositories\FilterRepository;
use App\Portfolio;
use Illuminate\Http\Request;
use App\Http\Requests\PortfolioRequest;

use App\Http\Requests;
use App\Http\Controllers\Controller;

class PortfolioController extends AdminController
{
    public function __construct(PortfolioRepository $port_rep, FilterRepository $filter_rep) {

        parent::__construct();
        $this->port_rep = $port_rep;
        $this->filter_rep = $filter_rep;
        $this->template = env('THEME').'.admin.portfolios';
    }

    public function index() {
        $this->title = 'Dexploitdm | Портфолио';
        $portfolio = $this->getPort();
        $this->content =view(env('THEME').'.admin.portfolios_content')
            ->with('portfolio', $portfolio)->render();

        return $this->renderOutput();
    }
    public function getPort() {
        $portfolio = $this->port_rep->get('*',FALSE,TRUE,FALSE);
        return $portfolio;
    }

    public function create()
    {
        $this->title = "Добавить проект";

        $items = Portfolio::select('*');
        $filter = $this->getFilters();
        $this->content = view(env('THEME').'.admin.portfolios_create_content')->with([
            'items'=> $items,
            'filter'=> $filter
        ])->render();

        return $this->renderOutput();

    }
    public function getFilters() {
        $filter = $this->filter_rep->get('*');
        return $filter;
    }

    public function edit(Portfolio $portfolio)
    {
        $portfolio->img =json_decode($portfolio->img);
        $portfolio->img2 =json_decode($portfolio->img2);
        $portfolio->img3 =json_decode($portfolio->img3);
        $portfolio->img4 =json_decode($portfolio->img4);

        $items = Portfolio::pluck('*');
        $filter = $this->getFilters();
        $this->title = 'Редактирование Слайда';
        $this->content = view(env('THEME').'.admin.portfolios_create_content')
            ->with([
                'items' => $items,
                'portfolio'=>$portfolio,
                'filter'=> $filter
            ])->render();
        return $this->renderOutput();
    }

    public function store(PortfolioRequest $request)
    {
        $result = $this->port_rep->addPortfolio($request);
        if(is_array($result) && !empty(['error'])) {
            return  back()->with($result);
        }
        return redirect('/admin')->with($result);
    }

    public function update(PortfolioRequest $request, Portfolio $portfolio)
    {
        $result = $this->port_rep->updatePortfolio($request, $portfolio);
        if(is_array($result) && !empty($result['error'])) {
            return back()->with($result);
        }
        return redirect('/admin/portfolios')->with($result);
    }

    public function destroy(Portfolio $portfolio)
    {
        $result = $this->port_rep->deletePortfolio($portfolio);
        if(is_array($result) && !empty($result['error'])) {
            return back()->with($result);
        }
        return redirect('/admin/portfolios')->with($result);
    }
}
